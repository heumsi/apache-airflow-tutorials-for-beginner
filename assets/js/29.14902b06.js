(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{554:function(s,a,t){s.exports=t.p+"assets/img/img.179401d5.png"},555:function(s,a,t){s.exports=t.p+"assets/img/img_2.c6e29dc6.png"},556:function(s,a,t){s.exports=t.p+"assets/img/img_1.123084dc.png"},653:function(s,a,t){"use strict";t.r(a);var n=t(35),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"docker로-하나씩-배포하기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker로-하나씩-배포하기"}},[s._v("#")]),s._v(" Docker로 하나씩 배포하기")]),s._v(" "),n("p",[s._v("이 방법은 Docker로 Airflow 컴포넌트들을 직접 하나씩 배포하는 방법입니다.\n최종적으로 Docker 컨테이너를 통해 각 Airflow 컴포넌트들의 독립된 실행 환경을 구성하게 됩니다.")]),s._v(" "),n("p",[s._v("다만 실제로 배포할 때 이 방법보단, 다음 글에서 다룰 Docker-compose로 배포하는 방법을 더 많이 사용하곤 합니다.\n여기서는 배포 그 자체보다는, Docker-compose로 배포하는 방법을 다루기 전에,\nDocker 컨테이너로 배포하려면 어떤 과정을 거쳐야 하는 지에 대해 중점을 두시면 좋을거 같습니다.")]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),n("p",[s._v("도커에 대해 처음 들어보시는 분들은 "),n("a",{attrs:{href:"https://subicura.com/2017/01/19/docker-guide-for-beginners-1.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("subicura 님의 초보를 위한 도커 안내서"),n("OutboundLink")],1),s._v(" 를 읽어보시길 추천드립니다.")])]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),n("p",[s._v("배포하기 위해 배포 환경에 Docker가 미리 설치되어 있어야 합니다.\nDocker가 설치되어 있지 않다면, 아래 내용을 참고하여 Docker를 설치해주세요.")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://docs.docker.com/desktop/windows/install/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Install Docker Desktop on Windows"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://docs.docker.com/desktop/mac/install/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Install Docker Desktop on Mac"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://docs.docker.com/engine/install/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Install Docker Engine on Ubuntu"),n("OutboundLink")],1)])])]),s._v(" "),n("h2",{attrs:{id:"프로젝트-세팅"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#프로젝트-세팅"}},[s._v("#")]),s._v(" 프로젝트 세팅")]),s._v(" "),n("h3",{attrs:{id:"프로젝트-경로-생성-및-진입"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#프로젝트-경로-생성-및-진입"}},[s._v("#")]),s._v(" 프로젝트 경로 생성 및 진입")]),s._v(" "),n("p",[s._v("Airflow 프로젝트를 담을 경로를 다음처럼 생성하고 진입합니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Airflow 프로젝트를 위한 디렉토리를 하나 생성합니다.")]),s._v("\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" my-airflow-project\n$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" my-airflow-project\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("이후에 진행될 모든 커맨드는 이 프로젝트 경로에서 실행합니다.")]),s._v(" "),n("h2",{attrs:{id:"docker-network-생성"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-network-생성"}},[s._v("#")]),s._v(" Docker Network 생성")]),s._v(" "),n("p",[s._v("Airflow의 모든 컴포넌트가 Docker 컨테이너로 배포될텐데, 이 컨테이너들간의 통신할 네트워크를 먼저 생성합니다.")]),s._v(" "),n("p",[s._v("다음 명령어로 Docker Network를 생성합니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network create airflow\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("잘 생성되었는지 다음처럼 확인해볼 수 있습니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" network "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\nNETWORK ID     NAME      DRIVER    SCOPE\nb8f5eb31452e   airflow   bridge    "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"meta-database"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#meta-database"}},[s._v("#")]),s._v(" Meta Database")]),s._v(" "),n("h3",{attrs:{id:"배포하기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#배포하기"}},[s._v("#")]),s._v(" 배포하기")]),s._v(" "),n("p",[s._v("Meta Database로 PostgreSQL를 사용하겠습니다.")]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),n("p",[s._v("만약 이미 배포하여 사용 중인 Database가 있다면, 이 작업은 스킵하셔도 좋습니다.")])]),s._v(" "),n("p",[s._v("Postgres 컨테이너에 Volume 마운트할 디렉토리를 다음처럼 만들어둡니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" data\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("다음 명령어로 Postgres 컨테이너를 실행합니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --name airflow-database "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --network airflow "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -v "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/data:/var/lib/postgresql/data "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("POSTGRES_USER")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("airflow "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("POSTGRES_PASSWORD")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  postgres:13\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("컨테이너가 제대로 배포되었는지 다음처럼 확인할 수 있습니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n\nCONTAINER ID   IMAGE         COMMAND                  CREATED         STATUS              PORTS                    NAMES\nc0b60f349279   postgres:13   "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker-entrypoint.s…"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" minutes ago   Up About a minute   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5432")]),s._v("/tcp   airflow-database\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"초기화-하기"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#초기화-하기"}},[s._v("#")]),s._v(" 초기화 하기")]),s._v(" "),n("p",[s._v("다음 명령어로 Meta Database를 초기화합니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --name airflow-init "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --network airflow "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --entrypoint /bin/bash "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("AIRFLOW__CORE__SQL_ALCHEMY_CONN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("postgresql+psycopg2://airflow:1234@airflow-database:5432/airflow "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  apache/airflow:2.2.3-python3.8 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -c "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" \\\n    airflow db init && \\\n    airflow users create \\\n      --username admin \\\n      --password 1234 \\\n      --firstname heumsi \\\n      --lastname jeon \\\n      --role Admin \\\n      --email heumsi@naver.com \\\n  "')]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h2",{attrs:{id:"scheduler"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#scheduler"}},[s._v("#")]),s._v(" Scheduler")]),s._v(" "),n("p",[s._v("다음 명령어로 Scheduler를 배포합니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --name airflow-scheduler "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --network airflow "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("AIRFLOW__CORE__SQL_ALCHEMY_CONN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("postgresql+psycopg2://airflow:1234@airflow-database:5432/airflow "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("AIRFLOW__CORE__EXECUTOR")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("LocalExecutor "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  apache/airflow:2.2.3-python3.8 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  airflow scheduler\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("컨테이너가 제대로 배포되었는지 다음처럼 확인할 수 있습니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n\nCONTAINER ID   IMAGE                            COMMAND                  CREATED          STATUS          PORTS      NAMES\nf2ac94182d39   apache/airflow:2.2.3-python3.8   "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/bin/dumb-init …"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" seconds ago   Up "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("44")]),s._v(" seconds   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("/tcp   airflow-scheduler\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),n("p",[s._v("Scheduler Executor는 기본적으로 Sequential Executor로 설정되어 있지만,\n운영 환경에서는 적어도 Local Executor를 사용하기를 공식 문서에서 권장하고 있습니다.")]),s._v(" "),n("p",[s._v("작은 규모라면 Local Executor를, 어느 정도 규모가 있다면 Celery Executor를,\n쿠버네티스 위에서 배포한다면 Kubernetes Executor를 사용하기를 권장합니다.")])]),s._v(" "),n("h2",{attrs:{id:"webserver"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webserver"}},[s._v("#")]),s._v(" Webserver")]),s._v(" "),n("p",[s._v("다음 명령어로 Webserver를 배포합니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --name airflow-webserver "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --network airflow "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  -e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("AIRFLOW__CORE__SQL_ALCHEMY_CONN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("postgresql+psycopg2://airflow:1234@airflow-database:5432/airflow "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  apache/airflow:2.2.3-python3.8 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  airflow webserver\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n\nCONTAINER ID   IMAGE                            COMMAND                  CREATED          STATUS          PORTS      NAMES\ne8dd306789f6   apache/airflow:2.2.3-python3.8   "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/bin/dumb-init …"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),s._v(" seconds ago   Up "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("41")]),s._v(" seconds   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:8080-"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("/tcp   airflow-webserver"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"code-server"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#code-server"}},[s._v("#")]),s._v(" Code Server")]),s._v(" "),n("p",[s._v("Code Server는 VSCode의 Web Browser 버전입니다.\n서버에 직접 접속하여 DAG 파일을 작성하지 않고, 이 Code Server를 이용하여 작성할 수 있도록 해봅시다.")]),s._v(" "),n("p",[s._v("다음처럼 Docker 컨테이너로 배포합니다. 이 때 "),n("code",[s._v("dags/")]),s._v(" 디렉토리를 마운트합니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it --name code-server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --name airflow-code-server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -v "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('/dags:/home/coder/project"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8888")]),s._v(":8888 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PASSWORD")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("HOST")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -e "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PORT")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8888")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    codercom/code-server:4.0.2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("컨테이너가 제대로 배포되었는지 다음처럼 확인할 수 있습니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n\nCONTAINER ID   IMAGE                         COMMAND                  CREATED          STATUS          PORTS                    NAMES\n88608ae21d39   codercom/code-server:latest   "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/bin/entrypoint…"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" seconds ago   Up "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" seconds   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("/tcp, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:8888-"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8888")]),s._v("/tcp   airflow-code-server\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("이제 브라우저에서 "),n("code",[s._v("http://localhost:8888")]),s._v(" 에 접속해봅시다.")]),s._v(" "),n("p",[n("img",{attrs:{src:t(554),alt:"img.png"}})]),s._v(" "),n("p",[s._v("배포할 때 설정한 비밀번호 "),n("code",[s._v("1234")]),s._v(" 를 입력합니다. 그러면 아래와 같은 화면이 등장합니다.")]),s._v(" "),n("p",[n("img",{attrs:{src:t(555),alt:"img_2.png"}})]),s._v(" "),n("p",[s._v("왼쪽 Explorer 탭에서 "),n("code",[s._v("project")]),s._v(" 를 클릭하면, 우리가 마운트한 "),n("code",[s._v("dags/")]),s._v(" 내 파일이 보입니다.")]),s._v(" "),n("p",[n("img",{attrs:{src:t(556),alt:"img_1.png"}})]),s._v(" "),n("h2",{attrs:{id:"정리"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#정리"}},[s._v("#")]),s._v(" 정리")]),s._v(" "),n("p",[s._v("배포한 모든 컨테이너를 확인해보면 다음과 같습니다.")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n\nCONTAINER ID   IMAGE                            COMMAND                  CREATED              STATUS              PORTS                              NAMES\ne8dd306789f6   apache/airflow:2.2.3-python3.8   "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/bin/dumb-init …"')]),s._v("   About a minute ago   Up About a minute   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:8080-"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("/tcp             airflow-webserver\nbb7e13d1f4c5   apache/airflow:2.2.3-python3.8   "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/bin/dumb-init …"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" minutes ago        Up "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" minutes        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("/tcp                           airflow-scheduler\n42736f3bf287   postgres:13                      "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker-entrypoint.s…"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" minutes ago        Up "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" minutes        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5432")]),s._v("/tcp                           airflow-database\n88608ae21d39   codercom/code-server:latest      "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/bin/entrypoint…"')]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" seconds ago        Up "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" seconds        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("/tcp, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:8888-"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8888")]),s._v("/tcp   airflow-code-server\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);