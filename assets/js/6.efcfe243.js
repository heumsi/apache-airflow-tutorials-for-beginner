(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{584:function(r,s,t){r.exports=t.p+"assets/img/img.9b94807c.png"},585:function(r,s,t){r.exports=t.p+"assets/img/img_1.88340fc0.png"},586:function(r,s,t){r.exports=t.p+"assets/img/img_2.218d61aa.png"},587:function(r,s,t){r.exports=t.p+"assets/img/img_3.441dd8b1.png"},588:function(r,s,t){r.exports=t.p+"assets/img/img_4.c6ce8b88.png"},589:function(r,s,t){r.exports=t.p+"assets/img/img_5.b73c0a58.png"},590:function(r,s,t){r.exports=t.p+"assets/img/img_6.468c4474.png"},591:function(r,s,t){r.exports=t.p+"assets/img/img_7.581c16c6.png"},592:function(r,s,t){r.exports=t.p+"assets/img/img_8.c1e30e2a.png"},672:function(r,s,t){"use strict";t.r(s);var e=t(35),a=Object(e.a)({},(function(){var r=this,s=r.$createElement,e=r._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h1",{attrs:{id:"providers-사용법-알아보기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#providers-사용법-알아보기"}},[r._v("#")]),r._v(" Providers 사용법 알아보기")]),r._v(" "),e("p",[r._v("Provider는 Slack, MySQL, GCP, AWS와 같은 외부 시스템을 Airflow DAG에서 사용할 수 있는 방법입니다.\n예를 들어 Postgres Provider를 설치하면 Postgres 관련 Operator나 Hook을 사용할 수 있습니다.\n이처럼 패키지는 각 외부 시스템 별로 나뉘어 구성되어 있고 Airflow를 설치한 이후 필요에 따라 별도로 설치해야합니다.")]),r._v(" "),e("h2",{attrs:{id:"provider-package-목록"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#provider-package-목록"}},[r._v("#")]),r._v(" Provider Package 목록")]),r._v(" "),e("p",[e("a",{attrs:{href:"https://airflow.apache.org/docs/#providers-packages-docs-apache-airflow-providers-index-html",target:"_blank",rel:"noopener noreferrer"}},[r._v("공식 문서"),e("OutboundLink")],1),r._v("에서 다음처럼 Provider Package 목록을 확인할 수 있습니다.")]),r._v(" "),e("p",[e("img",{attrs:{src:t(584),alt:"img.png"}})]),r._v(" "),e("p",[r._v("각 패키지별로 버전도 다르고, 지원하는 Airflow 버전도 다르므로 이를 확인하고 사용해야합니다.")]),r._v(" "),e("h2",{attrs:{id:"설치하는-방법"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#설치하는-방법"}},[r._v("#")]),r._v(" 설치하는 방법")]),r._v(" "),e("p",[r._v("공식 문서에 대부분 설명되어 있지만, Provider를 어떻게 설치하고 둘러볼지에 대해 간단히 알아보겠습니다.")]),r._v(" "),e("p",[r._v("먼저 설치입니다. 예를 들어 Postgres와 관련한 작업을 하고 싶어 Postgres Provider Package를 설치해야한다고 해봅시다. 먼저 위 공식문서에서 postgres를 찾습니다.")]),r._v(" "),e("p",[e("img",{attrs:{src:t(585),alt:"img_2.png"}})]),r._v(" "),e("p",[r._v("해당 패키지가 존재하는 것을 확인후 클릭해보면 다음처럼 어떻게 설치해야하는지, 어떤 Airflow 버전을 지원하는지 적혀있습니다.")]),r._v(" "),e("p",[e("img",{attrs:{src:t(586),alt:"img_2.png"}})]),r._v(" "),e("p",[r._v("문서에 나온대로 Airflow가 배포된 환경에 다음처럼 Postgres Provider Package를 설치합니다.")]),r._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[r._v("$ pip "),e("span",{pre:!0,attrs:{class:"token function"}},[r._v("install")]),r._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[r._v("'apache-airflow-providers-postgres'")]),r._v("\n")])]),r._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[r._v("1")]),e("br")])]),e("p",[r._v("설치가 완료되고 Airflow Scheduler를 재시작하면 다음처럼 Airflow Web UI의 Providers 페이지에서 Postgres Provider Package가 설치되었음을 확인할 수 있습니다.")]),r._v(" "),e("p",[e("img",{attrs:{src:t(587),alt:"img_3.png"}})]),r._v(" "),e("h2",{attrs:{id:"제공해주는-목록-확인하기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#제공해주는-목록-확인하기"}},[r._v("#")]),r._v(" 제공해주는 목록 확인하기")]),r._v(" "),e("p",[r._v("문서의 Content 부분을 보면 이 Provider Package에서 다음처럼 어떤 것들을 제공해주는지 볼 수 있습니다.")]),r._v(" "),e("p",[e("img",{attrs:{src:t(588),alt:"img_4.png"}})]),r._v(" "),e("p",[r._v("Connection types를 확인해보면 다음처럼 Postgres Connection Type을 확인할 수 있습니다.")]),r._v(" "),e("p",[e("img",{attrs:{src:t(589),alt:"img_5.png"}})]),r._v(" "),e("p",[r._v("이 Connection Type은 Airflow Web UI에서 다음처럼 Connection을 생성할 때 등장합니다.")]),r._v(" "),e("p",[e("img",{attrs:{src:t(590),alt:"img_6.png"}})]),r._v(" "),e("p",[r._v("또한 PostgresOperator types를 확인해보면 다음처럼 "),e("code",[r._v("PostgresOperator")]),r._v(" 를 어떻게 사용하는지에 대한 가이드가 소개되어 있습니다.")]),r._v(" "),e("p",[e("img",{attrs:{src:t(591),alt:"img_7.png"}})]),r._v(" "),e("p",[r._v("파이썬 코드에서 실제로 제공해주능 패키지 목록은 다음처럼 Python API 페이지에서 볼 수 있습니다.")]),r._v(" "),e("p",[e("img",{attrs:{src:t(592),alt:"img_8.png"}})]),r._v(" "),e("h2",{attrs:{id:"나가며"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#나가며"}},[r._v("#")]),r._v(" 나가며")]),r._v(" "),e("p",[r._v("Airflow Providers Package는 외부 시스템과 Airflow를 통합(Integration)하는 아주 강력한 방법입니다.\nAirflow가 인기있는 이유 중 하나는 바로 외부 시스템과 잘 통합되도록 다양한 Providers를 제공한다는 점 때문입니다.")]),r._v(" "),e("p",[r._v("Airflow 1.x 버전에서는 Provider Packages가 모두 Airflow에 내장되어 있었지만,\nAirflow 2.x 버전부터는 Providers가 내장되어 있지 않고, 필요에 따라 사용자가 직접 플러그인처럼 설치해야합니다.\n공식문서를 잘 찾아 필요한 Provider를 적재적소에 잘 활용해봅시다.")]),r._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[r._v("TIP")]),r._v(" "),e("p",[r._v("Postgres Package Provider를 활용하는 예제는 이전 예제인 "),e("RouterLink",{attrs:{to:"/dags/05-etc-features/03-connections-and-hooks/"}},[r._v("Connections와 Hooks - 외부 시스템과 연결 및 작업하기")]),r._v("를 참고하세요.")],1)])])}),[],!1,null,null,null);s.default=a.exports}}]);